name: build

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - 'main'
    tags:
      - '*'
  workflow_dispatch: {}

jobs:
  rust-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        components: rust-src, clippy, rustfmt
        override: false

    - name: Install bpf-linker
      run: |
        cargo install bpf-linker

    # TODO: Once we migrate the controller from Go to Rust,
    # add the controller build step here.

    - name: Build all rust crates (dataplane, test server) 
      run: |
        make build

    - name: Check formatting
      run: |
        make check.format

    - name: Check clippy
      run: |
        make lint

    - name: Run Tests
      run: |
        make test
  docker-build:
    name: docker-build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@85e6279cec87321a52edac9c87bce653a07cf6c2 # v4.1.7
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            dataplane:
              - 'dataplane/**'
            containerfile:
              - 'build/Containerfile.dataplane'
      - name: Setup QEMU
        if: steps.filter.outputs.dataplane || steps.filter.outputs.containerfile
        uses: docker/setup-qemu-action@53851d14592bedcffcf25ea515637cff71ef929a # v3.3.0
      - name: Setup Docker Buildx
        if: steps.filter.outputs.dataplane || steps.filter.outputs.containerfile
        id: buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0
        with:
          buildkitd-flags: "--debug"
      - name: Build multi-arch container image
        if: steps.filter.outputs.dataplane || steps.filter.outputs.containerfile
        uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991 # v6.13.0
        with:
          push: false
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          platforms: linux/amd64,linux/arm64
          file: build/Containerfile.dataplane
          tags: kong/blixt-dataplane:pr-${{ github.event.pull_request.number }}-${{ github.sha }}
